{"ts":1368103042503,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"using System.Collections.Generic;\nusing System.Linq;\nusing System.Web.Http;\nusing Raven.Abstractions.Data;\nusing Raven.Client;\n\nnamespace RavenMDB.Controllers\n{\n    public class MovieController : RavenController\n    {\n        // GET /api/values\n        public Movie Get(string id)\n        {\n            this.AutoSave = false;\n            return RavenSession.Load<Movie>(id);\n        }\n\n        // GET /api/values\n        public SearchResult Post([FromBody] SearchRequest request )\n        {\n            this.AutoSave = false;\n            var httpRequest = Request.Content;\n            FieldHighlightings fieldHighlightings;\n            var query = RavenSession.Advanced.LuceneQuery<Movie>(\"ComplexMovieIndex\")\n                .Highlight(\"Plot\", 128, 2, out fieldHighlightings);\n\n            if (string.IsNullOrEmpty(request.q)) request.q = \"*\";\n\n            var results = query.Search(\"Plot\", request.q);\n\n            query = request\n                .facets\n                .Aggregate(query, \n                    (current, item) => \n                        current\n                            .AndAlso()\n                            .Where(string.Format(\"{0}:\\\"{1}\\\"\", item.facet, item.selectedValue))\n                            );\n\n            var facets = query.ToFacets(\"facets/MovieFacets\");\n\n            var suggestionQuery = Store.DatabaseCommands\n                .Suggest(\"ComplexMovieIndex\", new SuggestionQuery{\n                    Field = \"Plot\",\n                    Term = request.q\n                });\n\n            RavenQueryStatistics stats;\n            query.Statistics(out stats);\n\n            return new SearchResult\n                       {\n                           TitlesFound = results.Select(x=>new TitleFound\n                                                            {\n                                                                Id=x.Id,\n                                                                Score=RavenSession.Advanced.GetMetadataFor(x).Value<double>(\"Temp-Index-Score\"),\n                                                                Title=x.Title,\n                                                                PlotSimple = x.PlotSimple,\n                                                                Highlights = fieldHighlightings.GetFragments(x.Id),\n                                                                Directors = x.Directors,\n                                                                Rated = x.Rated\n                                                            }).Take(10).ToList(),\n                           FacetedResults = facets.Results.Select(x=>new { Name=x.Key, Values = x.Value }),\n                           FacetedFilterApplied = request.facets,\n                           Suggestions = suggestionQuery.Suggestions,\n                           Stats = stats\n                       };\n\n        }    \n    }\n\n    public class SearchRequest\n    {\n        public string q { get; set; }\n        public List<FacetedFilter> facets { get; set; }\n        public int currentPage { get; set; }\n    }\n\n    public class FacetedFilter\n    {\n        public string facet { get; set; }\n        public string selectedValue { get; set; }\n    }\n\n    public class TitleFound\n    {\n        public string Id { get; set; }\n        public string Title { get; set; }\n        public string PlotSimple { get; set; }\n        public double Score { get; set; }\n        public string[] Highlights { get; set; }\n        public string[] Directors { get; set; }\n        public string Rated { get; set; }\n    }\n\n    public class SearchResult\n    {\n        public RavenQueryStatistics Stats { get; set; }\n        public object FacetedResults { get; set; }\n        public List<FacetedFilter> FacetedFilterApplied { get; set; }\n        public IEnumerable<TitleFound> TitlesFound { get; set; }\n        public string[] Suggestions { get; set; }\n        \n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":3895}]],"length":3895}
